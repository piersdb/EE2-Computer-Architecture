		;		Longest Execution time is 22254 occuring at iput=1327
		;LDR		R1,=1327 ; Doesnt Count towards line num
		
		;		1001 = 1111101001
		mov		R6,#0x670
		add		R6,R6,#0xf
		
		cmp		R1,R6
		ble		MidCase
		;		1001 ending in binary 00100011111101111111110101110001
		;add		23F7FD71
		
		
		;		1663 -> 20CA8281
		;		1513!!
		mov		r8,   #0x20000000
		add		r8,r8,#0x00CA0000
		add		r8,r8,#0x00008200
		add		r8,r8,#0x00000081
		b		MainLoop
		
		;1327	-> 91592A31
MidCase	sub		r6,r6,#336
		cmp		R1,R6
		Ble		LowCase
		
		;		1001!!
		mov		r8,   #0x91000000
		add		r8,r8,#0x00590000
		add		r8,r8,#0x00002A00
		add		r8,r8,#0x00000031
		
		b		MainLoop
		
		;991->7D8172E1
LowCase	sub		r6,r6,#336
		cmp		R1,R6
		Ble		VLowCase
		;		1001!!
		mov		r8,   #0x7D000000
		add		r8,r8,#0x00810000
		add		r8,r8,#0x00007200
		add		r8,r8,#0x000000E1
		b		MainLoop
		
		
		;less	than 991 case
VLowCase	mvn		r6,#0
		mov		R8,#1
		
		
MainLoop
		mov		R10,R8
		mov		R8,#0
		add		R9,R6,#2
		
		
		mov		R12,#1
		
Top		And		R11,R9,R12
		CMP		R11,#0
		BEQ		SkipAdd
		ADD		R8,R8,R10
SkipAdd	CMP		R12,#1024
		BEQ		endd
		Add		R12,R12,R12
		Add		R10,R10,R10
		b		Top
endd
		
		add		r6,r6,#2
		cmp		R1,R6
		bne		MainLoop
		mov		R0,R8
		
		
		
		
		and		r1,r1,#2
		cmp		r1,#2
		beq		EndStop
		rsb		r0,r0,#0
EndStop	end
		
		;		My algorithm focusses on two main speedups, the multiplication and precalculation of solutions
		;		The multiplication is done the way we are taught to do multiplication in school, by multilieying all the
		;digits	together, shifting the result by a factor of 10 as we move from right to left. My solution has two registers where
		;		the input is stored, R10 and R9. If bit i of r9 is 0, we skip. if 1, we can shift the result by i and add it to the "accumulator"
		;		Th eoptimisation is insuring we dont put more than 1999 into r9. 1999 only has 11 bits so we can only check 11 rather than 32 for all numbers in our range.
		
		;		Chaching precalculated values means that we can limit the number of numbers we have to multiply by approximatly 3 in my case. The program is simplified by
		;		waiting until the end to handle negative numbers.
